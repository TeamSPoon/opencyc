<?xml version="1.0" encoding="UTF-8"?>

<!-- $Id$ 
     Customer Ant build script for the Cyc java API.
     
     Directory structure:

     build.xml (this file renamed)
     src/
       <java source files>
     doc/
       javadoc/
         <javadoc files>
     lib/
       <required jar files>
     build/
       classes/
         <java class files>
       OpenCyc.jar
-->

<project name="OpenCyc" default="all" basedir=".">

  <target name="init" description="initializes the variables used in this script">
    <property name="src.dir" value="src"/>
    <property name="doc.dir" value="doc"/>
    <property name="javadoc.dir" value="${doc.dir}/javadoc"/>
    <property name="build.dir" value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="lib.dir" value="lib"/>
    <property name="jar.file" value="OpenCyc.jar"/>
    <path id="classpath.refid">
      <pathelement path="${lib.dir}/axis.jar"/>
      <pathelement path="${lib.dir}/commons-collections.jar"/>
      <pathelement path="${lib.dir}/commons-discovery.jar"/>
      <pathelement path="${lib.dir}/icu4j-2004-10-2.jar"/>
      <pathelement path="${lib.dir}/jakarta-oro-2.0.4.jar"/>
      <pathelement path="${lib.dir}/jaxrpc.jar"/>
      <pathelement path="${lib.dir}/jdom.jar"/>
      <pathelement path="${lib.dir}/jena-2.1.jar"/>
      <pathelement path="${lib.dir}/junit.jar"/>
      <pathelement path="${lib.dir}/vowlidator.jar"/>
      <pathelement path="${lib.dir}/xercesImpl-2.7.1.jar"/>
      <pathelement path="${lib.dir}/xml-apis-2.7.1.jar"/>
      <pathelement path="${lib.dir}/xml-datatype-validator-20011001.jar"/>
      <pathelement path="${lib.dir}/xmlparserv2.jar"/>
      <pathelement path="${lib.dir}/xschema.jar"/>
    </path>
    <property name="current.classpath" refid="classpath.refid"/>
  </target>
  
  <target name="clean-classes" depends="init" description="removes the jar and all classes files">
    <delete file="${build.dir}/${jar.file}"/>
    <delete dir="${classes.dir}"/>
    <mkdir dir="${classes.dir}"/>
  </target>

  <target name="clean-javadoc" depends="init" description="removes all javadoc files">
    <delete dir="${javadoc.dir}"/>
  </target>

  <target name="clean" depends="clean-classes,clean-javadoc" description="removes all jar, classes and javadoc files"/>

  <target name="javadoc" depends="init">
    <javadoc 
      sourcepath="${src.dir}"
      classpath="${current.classpath}" 
      packagenames="org.opencyc.*"
      destdir="${doc.dir}/javadoc/"
      author="true"
      version="true"
      use="true" 
      link="http://java.sun.com/j2se/1.4/docs/api"
      source="1.4">
      <!-- in Ant 1.6, add  breakiterator=yes -->
    </javadoc>
  </target>

  <target name="javadoc-fresh" depends="clean-javadoc,javadoc" description="recreates all javadoc files"/>

  <target name="compile" depends="init" description="compiles the changed sources">
    <javac 
      classpath="${current.classpath}" 
      debug="true" 
      deprecation="true" 
      destdir="${classes.dir}" 
      srcdir="${src.dir}" 
      source="1.4"/>
  </target>
  
  <target name="compile-fresh" depends="clean-classes,compile" description="compiles all the sources"/>
  
  <target name="jar" depends="compile" description="updates the java archive (jar) file">
    <!-- To make a standalone app: -->
    <!-- 1. Create a myapp.mf manifest somewhere. -->
    <!-- 2. Put in it two lines: -->
    <!-- Manifest-Version: 1.0 -->
    <!-- Main-Class: com.foo.Main -->
    <!-- 3. Pass to <jar>: manifest="myapp.mf" -->
    <jar compress="true" filesOnly="true" jarfile="${build.dir}/${jar.file}">
      <fileset dir="${classes.dir}"/>
    </jar>
  </target>
  
  <target name="jar-fresh" depends="compile-fresh,jar" description="recreates the java archive"/>

  <target 
    name="all" 
    depends="javadoc-fresh,jar-fresh" 
    description="recreates the javadoc, compiles all files and recreates the java archive"/>
</project>
